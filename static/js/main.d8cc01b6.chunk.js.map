{"version":3,"sources":["../../module/lib/index.js","EventsDemo.tsx","score.ts","reportWebVitals.ts","index.tsx"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","vexflow_1","require","getClosest","iterable","closestFunct","closest","undefined","distance","i","length","thisItem","thisDistance","idx","item","getAbsOutsideRange","num","min","max","getStaveCenterY","stave","getYForLine","options","num_lines","getDistance","point","boundingBox","x","y","xbb","ybb","w","h","xDiff","yDiff","Math","sqrt","pow","getTickablesAndBeats","voice","resolution","getActualResolution","totalTicks","default","Flow","Fraction","items","_i","_a","getTickables","t","push","tickable","beat","adjusted","getTicks","clone","divide","add","numerator","denominator","simplify","getClosestTickableResult","voices","pt","closestTickableList","map","v","ptX","itemBefore","itemAfter","tickAndBeat","tickableBB","getBoundingBox","getX","getW","filter","getClosestTickable","closestTickableBefore","reduce","prevBest","curList","closestTickable","flatMap","lst","cur","getAccidentalOffset","accidental","toLocaleLowerCase","getNoteMap","mapping","entries","keyProperties","note_values","_b","noteName","_c","noteLetterIdx","index","semitoneVal","int_val","rest","code","noteLetter","accidentalOffset","parseNote","noteStr","trimmed","trim","toUpperCase","accidentalStr","substring","formatNote","note","NOTE_MAPPING","getKeySigAccidentals","keySig","keyNote","keySpec","KEY_SIGNATURE_MAP","compareFractions","a","b","difference","subtract","getVoicesAccidentals","stopBeat","accidentalMap","getCategory","StaveNote","CATEGORY","staveNote","accidentals_1","modifiers","modifier","Accidental","type","getKeys","key","parsedNote","noteWithOctave","pieces","split","octave","parseInt","isNaN","parseNoteAndOctave","sort","forEach","keySigs","toRet","keysStr","keysStr_1","accidentalNote","_convertToMap","getScoreMouseEvent","systems","noteMap","fetchAccidentals","_d","sysMeasureResult","meas","width","lastY","getClosestSystemMeasure","closestSystemMeasure","measureIdx","closestStaveIdx","closestStave","centerLineOffset","effectivePitch","accidentals","staveResult","parts","p","abs","centerY","spacing","spacing_between_lines_px","round","getCenterLineOffset","pitchTick","staveIdx","measureBeat","keySigAccidentals","voiceAccidentals","staveParts","keySig_1","getModifiers","find","m","KeySignature","accidentalOverrides","getAccidentals","clef","octaveShift","effectiveAccidentals","lineShiftOffset","clefProperties","line_shift","noteLetterMap","getNoteAndOctave","octave_shift","mouseX","mouseY","EVENT_DEMO_ID","App","props","myRef","React","createRef","elementId","concat","registry","vexflow","Registry","enableDefaultRegistry","vf","Factory","renderer","height","score","EasyScore","throwOnError","bind","notes","beam","makeSystem","system","System","spaceBetweenStaves","set","time","addStave","stem","TextDynamics","text","duration","dots","line","addClef","addKeySignature","addTimeSignature","setTempo","name","bpm","addConnector","GraceNote","keys","slash","setEndBarType","Barline","REPEAT_END","setBegBarType","REPEAT_BEGIN","draw","getMinuet","e","rect","current","getBoundingClientRect","clientX","left","clientY","top","evt","setState","mouseEvent","console","log","state","style","overflow","margin","padding","marginBottom","id","paddingLeft","paddingTop","ref","onClick","position","bottom","right","marginLeft","backgroundColor","borderRadius","border","boxShadow","JSON","stringify","kv","toString","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8cc01b6.chunk.js","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vexflow_1 = __importDefault(require(\"vexflow\"));\n/**\n * Identifies the closest item as well as the index within the list of that item.\n * @param iterable The list of items to iterate through.\n * @param closestFunct The function assigning a distance of an item of type T.\n * @returns The index of the closest item in the list as well as the item itself.\n */\nfunction getClosest(iterable, closestFunct) {\n    var closest = undefined;\n    var distance = undefined;\n    for (var i = 0; i < iterable.length; i++) {\n        var thisItem = iterable[i];\n        var thisDistance = closestFunct(thisItem);\n        if (thisDistance === undefined) {\n            continue;\n        }\n        else if (thisDistance <= 0) {\n            return { idx: i, item: thisItem };\n        }\n        if (distance === undefined || thisDistance < distance) {\n            closest = { idx: i, item: thisItem };\n            distance = thisDistance;\n        }\n    }\n    return closest;\n}\n/**\n * Identifies the closest system measure using the bounding box of the system measure.\n * @param systems The system measures.\n * @param pt The point.\n * @returns The index of the closest system measure as well as the system measure.\n */\nfunction getClosestSystemMeasure(systems, pt) {\n    return getClosest(systems, function (meas) {\n        var _a, _b, _c;\n        var x = (_a = meas === null || meas === void 0 ? void 0 : meas.options) === null || _a === void 0 ? void 0 : _a.x;\n        var y = (_b = meas === null || meas === void 0 ? void 0 : meas.options) === null || _b === void 0 ? void 0 : _b.y;\n        var w = (_c = meas === null || meas === void 0 ? void 0 : meas.options) === null || _c === void 0 ? void 0 : _c.width;\n        var h = y !== undefined && (meas === null || meas === void 0 ? void 0 : meas.lastY) && meas.lastY - y > 0 ?\n            meas.lastY - y : undefined;\n        return (x !== undefined && y !== undefined &&\n            w !== undefined && h !== undefined) ?\n            getDistance(pt, { x: x, y: y, w: w, h: h }) : undefined;\n    });\n}\n/**\n * Given a number min and max, provides the distance from the number to\n * that min/max range.  Numbers within the range are assigned 0.  If the range was [1,3],\n * 2 => 0\n * 1 => 0\n * 3 => 0\n * 0 => 1\n * 4 => 1\n * @param num The number.\n * @param min The minimum number in the range.\n * @param max The maximum number in the range.\n * @returns The distance outside that range or 0.\n */\nfunction getAbsOutsideRange(num, min, max) {\n    if (num < min) {\n        return min - num;\n    }\n    else if (num > max) {\n        return num - max;\n    }\n    else {\n        return 0;\n    }\n}\n/**\n * Returns the y coordinate of the center of the stave.\n * @param stave The stave.\n * @returns The center y position of the stave.\n */\nfunction getStaveCenterY(stave) {\n    return stave.getYForLine(((stave.options.num_lines || 5) - 1) / 2);\n}\n/**\n * Returns the offset from the center line of the staves in terms of\n * pitches.  For instance, if selecting E4 on treble, will be ~3.\n * @param stave The stave.\n * @param pt The point.\n */\nfunction getCenterLineOffset(stave, pt) {\n    var centerY = getStaveCenterY(stave);\n    var spacing = stave.options.spacing_between_lines_px || 0;\n    return Math.round((centerY - pt.y) / (spacing / 2));\n}\n/**\n * Gets the distance of a point to a bounding box returning 0 if within.\n * @param point The point.\n * @param boundingBox The bounding box.\n * @returns The distance of the point to the bounding box.\n */\nfunction getDistance(point, boundingBox) {\n    var x = point.x, y = point.y;\n    var xbb = boundingBox.x, ybb = boundingBox.y, w = boundingBox.w, h = boundingBox.h;\n    var xDiff = getAbsOutsideRange(x, xbb, xbb + w);\n    var yDiff = getAbsOutsideRange(y, ybb, ybb + h);\n    return Math.sqrt(Math.pow(xDiff, 2) + Math.pow(yDiff, 2));\n}\n/**\n * Transforms the tickables in a voice into a list of tickables mapped to their beat.\n * @param voice The voice to iterate through.\n * @returns The list of tickables with their beats.\n */\nfunction getTickablesAndBeats(voice) {\n    var resolution = voice.getActualResolution();\n    var totalTicks = new vexflow_1.default.Flow.Fraction(0, 1);\n    // iterate through tickables ordered chronologically\n    var items = [];\n    for (var _i = 0, _a = voice.getTickables(); _i < _a.length; _i++) {\n        var t = _a[_i];\n        items.push({ tickable: t, beat: totalTicks });\n        var thisTicks = t.getTicks();\n        // track the current beats \n        // (i.e. given a quarter and two eighths, the second eighth is at 3/8)\n        var adjusted = thisTicks.clone().divide(resolution, 1);\n        totalTicks = totalTicks.clone()\n            .add(adjusted.numerator, adjusted.denominator)\n            .simplify();\n    }\n    // return the item before and after for what exists\n    return items;\n}\n/**\n * Returns the tickable before and after for the tickables in a voice.\n * If no tickable exists before and/or after, an item is not returned.\n * @param voice The point.\n * @param ptX The x coordinate of the point.\n * @returns A list of the closest (at most 2: one before and after) tickables to the point.\n */\nfunction getClosestTickable(voice, ptX) {\n    var itemBefore = undefined;\n    var itemAfter = undefined;\n    // iterate through tickables ordered chronologically\n    for (var _i = 0, _a = getTickablesAndBeats(voice); _i < _a.length; _i++) {\n        var tickAndBeat = _a[_i];\n        var tickable = tickAndBeat.tickable;\n        var tickableBB = tickable.getBoundingBox();\n        if (!tickableBB) {\n            continue;\n        }\n        var x = tickableBB.getX();\n        var w = tickableBB.getW();\n        // if the x position of this tickable has exceeded the x position,\n        // it is after the point.  So, break out of the loop.\n        if (x > ptX) {\n            itemAfter = tickAndBeat;\n            break;\n        }\n        // otherwise, track this item.\n        itemBefore = tickAndBeat;\n        // if this item's bounds contain the x point, this is the item we want.\n        if (x + w > ptX) {\n            break;\n        }\n    }\n    // return the item before and after for what exists\n    return [itemBefore, itemAfter].filter(function (item) { return item !== undefined; });\n}\n/**\n * Get metrics on the closest tickable and beat of a point to a list of voices.\n * @param voices The list of voices.\n * @param pt The point to check proximity.\n * @returns\n *    closestBefore: The closest tickable whose starting x position is before the x point of the point.\n *    closest: The closest tickable (not necessarily before) determined by distance of point to bounding box of tickable.\n */\nfunction getClosestTickableResult(voices, pt) {\n    var closestTickableList = voices.map(function (v) { return getClosestTickable(v, pt.x); });\n    var closestTickableBefore = closestTickableList.reduce(function (prevBest, curList) {\n        var _a;\n        if (!curList || curList.length < 1)\n            return prevBest;\n        return (_a = getClosest([prevBest, curList[0]].filter(function (i) { return i !== undefined; }), function (item) { return getDistance(pt, item.tickable.getBoundingBox()); })) === null || _a === void 0 ? void 0 : _a.item;\n    }, undefined);\n    var closestTickable = closestTickableList.flatMap(function (lst) { return lst; }).reduce(function (prevBest, cur) {\n        var _a;\n        return (_a = getClosest([prevBest, cur].filter(function (i) { return i !== undefined; }), function (item) { return getDistance(pt, item.tickable.getBoundingBox()); })) === null || _a === void 0 ? void 0 : _a.item;\n    }, undefined);\n    return {\n        closestTickable: closestTickable,\n        closestTickableBefore: closestTickableBefore\n    };\n}\n/**\n * Converts the accidental to its semitones offset from natural.\n * @param accidental The accidental.  Undefined will be treated as a 0.\n * @returns The semitone difference from a natural note (i.e. double sharp is 2, flat is -1)\n */\nfunction getAccidentalOffset(accidental) {\n    if (!accidental) {\n        return 0;\n    }\n    switch (accidental.toLocaleLowerCase()) {\n        case \"bb\": return -2;\n        case \"b\": return -1;\n        case \"#\": return 1;\n        case \"##\": return 2;\n        case \"n\": return 0;\n        default: return 0;\n    }\n}\n/**\n * Creates a NoteMapping using VF.Flow.keyProperties to perform\n * lookups of note meta data.\n */\nfunction getNoteMap() {\n    var mapping = {};\n    for (var _i = 0, _a = Object.entries(vexflow_1.default.Flow.keyProperties.note_values); _i < _a.length; _i++) {\n        var _b = _a[_i], noteName = _b[0], val = _b[1];\n        var _c = val, noteLetterIdx = _c.index, semitoneVal = _c.int_val, accidental = _c.accidental, rest = _c.rest, code = _c.code;\n        if (rest || code)\n            continue;\n        var items = mapping[noteLetterIdx];\n        if (!items) {\n            items = {\n                noteLetter: noteName[0]\n            };\n            mapping[noteLetterIdx] = items;\n        }\n        var accidentalOffset = getAccidentalOffset(accidental);\n        var noteLetter = noteName[0];\n        items[accidentalOffset] = {\n            semitoneVal: semitoneVal,\n            noteName: {\n                accidental: accidental || 'n',\n                noteLetter: noteLetter\n            },\n            noteLetterIdx: noteLetterIdx\n        };\n    }\n    return mapping;\n}\nexports.getNoteMap = getNoteMap;\n/**\n * A NoteMapping derived from vexflow key properties.\n */\nexports.NOTE_MAPPING = getNoteMap();\n/**\n * Determines the note and octave based on the center line index on the stave.\n *\n * For instance, if a click happens on the space above center line on a treble\n * clef, then C5 should be returned.\n *\n * @param noteMap A mapping of note letters to metadata about that note.\n * @param clef The clef (i.e. 'treble', 'bass', etc. as defined by VF.Flow.clefProperties.values)\n * @param centerLineOffset The index above or below the center line of the stave.\n * @param octaveShift If the clef has an octave shift, this is the octave shift.\n * @param effectiveAccidentals Accidentals based on the key signature and notes with accidentals\n * in the measure.  If left undefined, the note returned will have no accidental.\n * @returns The note and octave corresponding to the click.\n */\nfunction getNoteAndOctave(noteMap, clef, centerLineOffset, octaveShift, effectiveAccidentals) {\n    if (octaveShift === void 0) { octaveShift = 0; }\n    var clefLineShift = vexflow_1.default.Flow.clefProperties(clef).line_shift;\n    var lineShiftOffset = centerLineOffset - clefLineShift * 2 - 1;\n    var octave = 5 - octaveShift;\n    while (lineShiftOffset < 0) {\n        lineShiftOffset += 7;\n        octave -= 1;\n    }\n    while (lineShiftOffset >= 7) {\n        lineShiftOffset -= 7;\n        octave += 1;\n    }\n    var noteLetterMap = noteMap[lineShiftOffset];\n    if (!noteLetterMap)\n        return undefined;\n    var noteLetter = noteLetterMap.noteLetter;\n    var accidentalOffset = 0;\n    if (effectiveAccidentals) {\n        var accidental = effectiveAccidentals.accidentalOverrides[noteLetter + octave];\n        if (!accidental) {\n            accidental = effectiveAccidentals.keySig[noteLetter];\n        }\n        if (accidental) {\n            accidentalOffset = getAccidentalOffset(accidental);\n        }\n    }\n    var note = noteLetterMap[accidentalOffset];\n    return { note: note, octave: octave };\n}\n/**\n * Parses a note string (i.e. C#) into the relevant note object.\n * @param noteStr The note string.\n * @returns The parsed note or undefined if it cannot be parsed.\n */\nfunction parseNote(noteStr) {\n    var trimmed = noteStr.trim();\n    if (!trimmed || !trimmed.length) {\n        return undefined;\n    }\n    else {\n        var noteLetter = trimmed[0].toUpperCase();\n        switch (noteLetter) {\n            case 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n            case 'E':\n            case 'F':\n            case 'G':\n                break;\n            default:\n                return undefined;\n        }\n        var accidental = undefined;\n        var accidentalStr = trimmed.substring(1);\n        if (accidentalStr.length > 0) {\n            accidental = accidentalStr;\n            switch (accidental) {\n                case '##':\n                case '#':\n                case 'b':\n                case 'bb':\n                case 'n':\n                    break;\n                default:\n                    return undefined;\n            }\n        }\n        return {\n            accidental: accidental,\n            noteLetter: noteLetter\n        };\n    }\n}\n/**\n * Format a note object into the relevant string (i.e. Bb).\n * @param note The note object.\n * @returns The relevant string (i.e. Bb).\n */\nfunction formatNote(note) {\n    return note.noteLetter + (note.accidental || \"\");\n}\n/**\n * Parses a note string of form C#4 into its constituent parts.\n * @param noteWithOctave The note string.\n * @returns The parsed note.\n */\nfunction parseNoteAndOctave(noteWithOctave) {\n    var pieces = noteWithOctave.split(\"/\");\n    if (pieces.length !== 2) {\n        return undefined;\n    }\n    var note = parseNote(pieces[0]);\n    var octave = parseInt(pieces[1], 10);\n    return (note && octave && !isNaN(octave))\n        ? { note: note, octave: octave }\n        : undefined;\n}\n/**\n * Accidentals for each key signature.\n */\nvar KEY_SIGNATURE_ACCIDENTALS = {\n    \"C\": [],\n    \"G\": [\"F#\"],\n    \"D\": [\"F#\", \"C#\"],\n    \"A\": [\"F#\", \"C#\", \"G#\"],\n    \"E\": [\"F#\", \"C#\", \"G#\", \"D#\"],\n    \"B\": [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\"],\n    \"F#\": [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\", \"E#\"],\n    \"C#\": [\"F#\", \"C#\", \"G#\", \"D#\", \"A#\", \"E#\", \"B#\"],\n    \"F\": [\"Bb\"],\n    \"Bb\": [\"Bb\", \"Eb\"],\n    \"Eb\": [\"Bb\", \"Eb\", \"Ab\"],\n    \"Ab\": [\"Bb\", \"Eb\", \"Ab\", \"Db\"],\n    \"Db\": [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\"],\n    \"Gb\": [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\"],\n    \"Cb\": [\"Bb\", \"Eb\", \"Ab\", \"Db\", \"Gb\", \"Cb\", \"Fb\"]\n};\n/**\n * Creates a mapping of key signature to the note accidentals in that key signature.\n * @param keySigs The key signatures mapping the key signature (Bb) to the accidentals (Bb, Eb)\n * @returns The mapping of keys to accidentals in that key.\n */\nfunction _convertToMap(keySigs) {\n    var toRet = {};\n    for (var _i = 0, _a = Object.entries(keySigs); _i < _a.length; _i++) {\n        var _b = _a[_i], noteStr = _b[0], keysStr = _b[1];\n        var note = parseNote(noteStr);\n        if (note) {\n            var accidentalMap = {};\n            for (var _c = 0, keysStr_1 = keysStr; _c < keysStr_1.length; _c++) {\n                var accidentalNoteStr = keysStr_1[_c];\n                var accidentalNote = parseNote(accidentalNoteStr);\n                if (accidentalNote && accidentalNote.accidental) {\n                    accidentalMap[accidentalNote === null || accidentalNote === void 0 ? void 0 : accidentalNote.noteLetter] = accidentalNote.accidental;\n                }\n            }\n            toRet[formatNote(note)] = accidentalMap;\n        }\n    }\n    return toRet;\n}\n/**\n * Maps key signatures (i.e. Bb) to a list of the accidentals in that key signature (Bb, Eb).\n */\nexports.KEY_SIGNATURE_MAP = _convertToMap(KEY_SIGNATURE_ACCIDENTALS);\n/**\n * Get the note accidentals for the vexflow key signature.\n * @param keySig The key signature.\n * @returns The accidentals in the key signature.\n */\nfunction getKeySigAccidentals(keySig) {\n    var keyNoteStr = keySig.keySpec;\n    var keyNote = parseNote(keyNoteStr);\n    if (keyNote) {\n        return exports.KEY_SIGNATURE_MAP[formatNote(keyNote)];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Compares two fractions returning the compare number (i.e. -1 for <, 0 for equal, 1 for >).\n * @param a The first fraction.\n * @param b The second fraction.\n */\nfunction compareFractions(a, b) {\n    var difference = a.clone().subtract(b).numerator;\n    return Math.min(1, Math.max(-1, difference));\n}\n/**\n * Get the accidentals in the voices.\n * @param voices The voices to iterate through looking for accidentals.\n * @param stopBeat Accidentals are identified from the beginning of the measure until this beat.\n * @returns all the measure accidentals to be considered.\n */\nfunction getVoicesAccidentals(voices, stopBeat) {\n    var accidentalMap = {};\n    voices\n        .flatMap(function (v) { return getTickablesAndBeats(v); })\n        .flatMap(function (_a) {\n        var tickable = _a.tickable, beat = _a.beat;\n        if (tickable.getCategory() === vexflow_1.default.Flow.StaveNote.CATEGORY) {\n            var staveNote = tickable;\n            var accidentals_1 = {};\n            if (staveNote.modifiers) {\n                for (var _i = 0, _b = staveNote.modifiers; _i < _b.length; _i++) {\n                    var modifier = _b[_i];\n                    if (modifier.getCategory() === vexflow_1.default.Flow.Accidental.CATEGORY) {\n                        accidentals_1[modifier.index] = modifier.type;\n                    }\n                }\n            }\n            return tickable.getKeys()\n                .map(function (key, idx) { return ({ key: key, beat: beat, accidental: accidentals_1[idx] }); });\n        }\n        else {\n            return [];\n        }\n    })\n        .map(function (_a) {\n        var key = _a.key, beat = _a.beat, accidental = _a.accidental;\n        var parsedNote = parseNoteAndOctave(key);\n        if (accidental && (parsedNote === null || parsedNote === void 0 ? void 0 : parsedNote.note) && !parsedNote.note.accidental) {\n            parsedNote.note.accidental = accidental;\n        }\n        return { note: parsedNote, beat: beat };\n    })\n        .filter(function (_a) {\n        var note = _a.note, beat = _a.beat;\n        return (note && note.note.accidental && compareFractions(beat, stopBeat) <= 0);\n    })\n        .sort(function (a, b) { return compareFractions(a.beat, b.beat); })\n        .forEach(function (_a) {\n        var note = _a.note;\n        if (!note || !note.note.accidental)\n            return;\n        accidentalMap[note.note.noteLetter + note.octave] = note.note.accidental;\n    });\n    return accidentalMap;\n}\n/**\n * Get accidentals for a stave in a particular measure in a particular beat.\n * @param systems The systems in the score.\n * @param staveIdx The index of the stave.\n * @param measureIdx The index of the measure.\n * @param measureBeat The beat in the measure.\n * @returns The accidentals in the key signature and in the measure.\n */\nfunction getAccidentals(systems, staveIdx, measureIdx, measureBeat) {\n    var _a, _b;\n    var keySigAccidentals = undefined;\n    var voiceAccidentals = undefined;\n    if (systems.length > measureIdx) {\n        for (var idx = measureIdx; idx >= 0; idx--) {\n            var system = systems[idx];\n            var staveParts = system.parts;\n            if (staveParts.length > staveIdx && staveParts[staveIdx].stave) {\n                var stave = staveParts[staveIdx].stave;\n                var keySig_1 = stave.getModifiers().find(function (m) { return m.getCategory() === vexflow_1.default.Flow.KeySignature.CATEGORY; });\n                if (keySig_1) {\n                    keySigAccidentals = getKeySigAccidentals(keySig_1);\n                    break;\n                }\n            }\n        }\n        var voices = (_b = (_a = systems[measureIdx]) === null || _a === void 0 ? void 0 : _a.parts) === null || _b === void 0 ? void 0 : _b.flatMap(function (p) { return p.voices; });\n        if (voices) {\n            voiceAccidentals = getVoicesAccidentals(voices, measureBeat);\n        }\n    }\n    var accidentalOverrides = voiceAccidentals || {};\n    var keySig = keySigAccidentals || {};\n    return {\n        keySig: keySig,\n        accidentalOverrides: accidentalOverrides\n    };\n}\n/**\n * Gets a score mouse event from a mouse point and series of system measures.\n * @param systems The systems of the score.\n * @param pt The mouse point.\n * @param noteMap A mapping of notes to their properties using vexflow key properties.\n * @param fetchAccidentals Whether or not to fetch accidentals.  This may be a costly\n * operation since all measures may be searched for key signatures.\n * @returns A mouse event with score information.\n */\nfunction getScoreMouseEvent(systems, pt, noteMap, fetchAccidentals) {\n    var _a, _b;\n    if (noteMap === void 0) { noteMap = exports.NOTE_MAPPING; }\n    if (fetchAccidentals === void 0) { fetchAccidentals = true; }\n    var _c, _d;\n    var sysMeasureResult = getClosestSystemMeasure(systems, pt);\n    var closestSystemMeasure = undefined;\n    var measureIdx = undefined;\n    var closestStaveIdx = undefined;\n    var closestStave = undefined;\n    var closestTickable = undefined;\n    var closestTickableBefore = undefined;\n    var centerLineOffset = undefined;\n    var effectivePitch = undefined;\n    var accidentals = undefined;\n    if (sysMeasureResult) {\n        closestSystemMeasure = sysMeasureResult.item;\n        measureIdx = sysMeasureResult.idx;\n        var staveResult = getClosest(closestSystemMeasure.parts.map(function (p) { return p.stave; }), function (stave) { return Math.abs(pt.y - getStaveCenterY(stave)); });\n        (_a = (staveResult) ? staveResult : { item: undefined, idx: undefined }, closestStave = _a.item, closestStaveIdx = _a.idx);\n        if (closestStave && closestStaveIdx !== undefined) {\n            centerLineOffset = getCenterLineOffset(closestStave, pt);\n            if (((_d = (_c = closestSystemMeasure) === null || _c === void 0 ? void 0 : _c.parts) === null || _d === void 0 ? void 0 : _d.length) > closestStaveIdx) {\n                var voices = closestSystemMeasure.parts[closestStaveIdx].voices;\n                (_b = getClosestTickableResult(voices, pt), closestTickable = _b.closestTickable, closestTickableBefore = _b.closestTickableBefore);\n                if (noteMap && closestTickableBefore && centerLineOffset !== undefined) {\n                    var pitchTick = closestTickableBefore.tickable;\n                    accidentals = fetchAccidentals ?\n                        getAccidentals(systems, closestStaveIdx, measureIdx, closestTickableBefore.beat) :\n                        undefined;\n                    effectivePitch = getNoteAndOctave(noteMap, pitchTick.clef, centerLineOffset, pitchTick.octave_shift, accidentals);\n                }\n            }\n        }\n    }\n    return {\n        accidentals: accidentals,\n        measureIdx: measureIdx,\n        closestSystemMeasure: closestSystemMeasure,\n        closestStaveIdx: closestStaveIdx,\n        closestStave: closestStave,\n        closestTickable: closestTickable,\n        closestTickableBefore: closestTickableBefore,\n        centerLineOffset: centerLineOffset,\n        effectivePitch: effectivePitch,\n        mouseX: pt.x,\n        mouseY: pt.y\n    };\n}\nexports.getScoreMouseEvent = getScoreMouseEvent;\n","import React from \"react\";\nimport {getNoteMap, getScoreMouseEvent, ScoreMouseEvent} from \"vexflow-mouse-events\"\nimport { getMinuet } from \"./score\";\n\nconst EVENT_DEMO_ID = \"eventDemo\";\nconst LEFT_OFFSET = 30;\nconst TOP_OFFSET = 30;\n\nexport default class App extends React.Component<any, {mouseEvent: any}> {\n  myRef: any = null;\n  systems: any[] = []\n\n  constructor(props: any) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.systems = getMinuet(EVENT_DEMO_ID);\n  }\n\n\n  onClick(e: any, systems: any[]) {\n    let rect = this.myRef.current.getBoundingClientRect();\n    let mouseX = e.clientX - rect.left - LEFT_OFFSET;\n    let mouseY = e.clientY - rect.top - TOP_OFFSET;\n\n    let pt = { x: mouseX, y: mouseY };\n    let evt = getScoreMouseEvent(systems, pt, getNoteMap(), true);\n    this.setState({mouseEvent: evt});\n    console.log(evt);\n  }\n\n  render() {\n    let mouseEvent : ScoreMouseEvent | undefined = (this?.state as any)?.mouseEvent;\n\n    return (\n      <div style={{width: '100vw', height: '100vh', overflow: 'auto', margin: 0, padding: 0}}>\n        <div style={{marginBottom: '300px'}}>\n          <div id={EVENT_DEMO_ID}\n            style={{paddingLeft: `${LEFT_OFFSET}px`, paddingTop: `${TOP_OFFSET}px`}}\n            ref={this.myRef}\n            onClick={(e) => this.onClick(e, this.systems)}\n          />\n        </div>\n        {mouseEvent &&\n          <div style={{\n            position: 'absolute', \n            bottom: '25px',\n            right: '25px', \n            marginLeft: '25px',\n            padding: '0px 5px',\n            backgroundColor: '#fafafa',\n            borderRadius: '8px',\n            border: '1px solid #ddd',\n            boxShadow: '3px 5px 3px #888888'\n          }}>\n            {[\n              [\"Accidentals\", JSON.stringify(mouseEvent.accidentals)], \n              [\"Centerline Offset\", mouseEvent.centerLineOffset],\n              [\"Closest Staves Index\", mouseEvent.closestStaveIdx],\n              [\"Tickable Before Beat\", mouseEvent.closestTickableBefore?.beat],\n              [\"Effective Pitch\", JSON.stringify(mouseEvent.effectivePitch)],\n              [\"Measure Index\", mouseEvent.measureIdx],\n              [\"Mouse X\", mouseEvent.mouseX],\n              [\"Mouse Y\", mouseEvent.mouseY]\n            ]\n            .map(kv => (<p key={kv[0]?.toString()}>{kv[0]}: {kv[1]?.toString()}</p>))\n          }\n          </div>\n        }\n      </div>\n    )\n  }\n}","\nimport vexflow from \"vexflow\"\n\n\nexport const getExample = (elementId: any) => {\n    const VF = vexflow.Flow;\n\n    // Create an SVG renderer and attach it to the DIV element named \"boo\".\n    var vf = new VF.Factory({ renderer: { elementId, height: 400 } });\n    var score = vf.EasyScore() as any;\n    var system = vf.System();\n\n    system.addStave({\n        voices: [\n            score.voice(\n                score.notes('C#5/q, B4')\n                    .concat(score.beam(score.notes('A4/8, E4, C4, D4')))\n            )\n        ]\n    }).addClef('treble').addTimeSignature('4/4');\n\n    system.addStave({\n        voices: [\n            score.voice(\n                score.notes('C#5/q, B4, B4')\n                    .concat(\n                        score.tuplet(score.beam(score.notes('A4/8, E4, C4'))))\n            )\n        ]\n    }).addClef('treble').addTimeSignature('4/4');\n\n    vf.draw();\n    return score;\n}\n\nexport const getMinuet = (elementId: string) => {\n    let systems: any[] = []\n    function concat(a: any, b: any) {\n        return a.concat(b);\n    }\n\n    var registry = new (vexflow.Flow as any).Registry();\n    (vexflow.Flow as any).Registry.enableDefaultRegistry(registry);\n    var vf = new vexflow.Flow.Factory({ renderer: { elementId, height: 800, width: 1200 } }) as any;\n    var score = vf.EasyScore({ throwOnError: true });\n\n    var voice = score.voice.bind(score);\n    var notes = score.notes.bind(score);\n    var beam = score.beam.bind(score);\n\n    var x = 120;\n    var y = 80;\n    function makeSystem(width: any) {\n        var system = vf.System({ x: x, y: y, width: width, spaceBetweenStaves: 10 });\n        x += width;\n        return system;\n    }\n\n    // function id(id: any) {\n    //   return registry.getElementById(id);\n    // }\n\n    score.set({ time: '3/4' });\n\n    /*  Measure 1 */\n    var system = makeSystem(220);\n    system\n        .addStave({\n            voices: [\n                voice([notes('D5/q[id=\"m1a\"]'), beam(notes('G4/8, A4, B4, C5', { stem: 'up' }))].reduce(concat)),\n                voice([vf.TextDynamics({ text: 'p', duration: 'h', dots: 1, line: 9 })]),\n            ],\n        })\n        .addClef('treble')\n        .addKeySignature('Bb')\n        .addTimeSignature('3/4')\n        .setTempo({ name: 'Allegretto', duration: 'h', dots: 1, bpm: 66 }, -30);\n\n    system\n        .addStave({ voices: [voice(notes('(G3 B3 D4)/h, A3/q', { clef: 'bass' }))] })\n        .addClef('bass')\n        .addKeySignature('G')\n        .addTimeSignature('3/4');\n    system.addConnector('brace');\n    system.addConnector('singleRight');\n    system.addConnector('singleLeft');\n    systems.push(system);\n    // id('m1a').addModifier(vf.Fingering({ number: '5' }), 0);\n\n    /*  Measure 2 */\n    system = makeSystem(150);\n    system.addStave({ voices: [voice(notes('D5/q[id=\"m2a\"], G4[id=\"m2b\"], G4[id=\"m2c\"]'))] });\n    system.addStave({ voices: [voice(notes('B3/h.', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n    // id('m2a').addModifier(vf.Articulation({ type: 'a.', position: 'above' }), 0);\n    // id('m2b').addModifier(vf.Articulation({ type: 'a.', position: 'below' }), 0);\n    // id('m2c').addModifier(vf.Articulation({ type: 'a.', position: 'below' }), 0);\n\n    // vf.Curve({\n    //   from: id('m1a'),\n    //   to: id('m2a'),\n    //   options: {\n    //     cps: [\n    //       { x: 0, y: 40 },\n    //       { x: 0, y: 40 },\n    //     ],\n    //   },\n    // });\n\n    /*  Measure 3 */\n    system = makeSystem(150);\n    system.addStave({\n        voices: [voice([notes('E5/q[id=\"m3a\"]'), beam(notes('(C#5 Gb5)/8, D5, En5, F5', { stem: 'down' }))].reduce(concat))],\n    });\n    // id('m3a').addModifier(vf.Fingering({ number: '3', position: 'above' }), 0);\n\n    system.addStave({ voices: [voice(notes('C4/h.', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    /*  Measure 4 */\n    system = makeSystem(150);\n    system.addStave({ voices: [voice(notes('G5/q[id=\"m4a\"], G4[id=\"m4b\"], G4[id=\"m4c\"]'))] });\n\n    system.addStave({ voices: [voice(notes('B3/h.', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // id('m4a').addModifier(vf.Articulation({ type: 'a.', position: 'above' }), 0);\n    // id('m4b').addModifier(vf.Articulation({ type: 'a.', position: 'below' }), 0);\n    // id('m4c').addModifier(vf.Articulation({ type: 'a.', position: 'below' }), 0);\n\n    // vf.Curve({\n    //   from: id('m3a'),\n    //   to: id('m4a'),\n    //   options: {\n    //     cps: [\n    //       { x: 0, y: 20 },\n    //       { x: 0, y: 20 },\n    //     ],\n    //   },\n    // });\n\n    /*  Measure 5 */\n    system = makeSystem(150);\n    system.addStave({\n        voices: [voice([notes('C5/q[id=\"m5a\"]'), beam(notes('D5/8, C5, B4, A4', { stem: 'down' }))].reduce(concat))],\n    });\n    // id('m5a').addModifier(vf.Fingering({ number: '4', position: 'above' }), 0);\n\n    system.addStave({ voices: [voice(notes('A3/h.', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    /*  Measure 6 */\n    system = makeSystem(150);\n    system.addStave({\n        voices: [voice([notes('B4/q'), beam(notes('C5/8, B4, A4, G4[id=\"m6a\"]', { stem: 'up' }))].reduce(concat))],\n    });\n\n    system.addStave({ voices: [voice(notes('G3/h.', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // vf.Curve({\n    //   from: id('m5a'),\n    //   to: id('m6a'),\n    //   options: {\n    //     cps: [\n    //       { x: 0, y: 20 },\n    //       { x: 0, y: 20 },\n    //     ],\n    //     invert: true,\n    //     position_end: 'nearTop',\n    //     y_shift: 20,\n    //   },\n    // });\n\n    /*  Measure 7 (New system) */\n    x = 20;\n    y += 230;\n\n    system = makeSystem(220);\n    system\n        .addStave({\n            voices: [\n                voice([notes('F4/q[id=\"m7a\"]'), beam(notes('G4/8[id=\"m7b\"], A4, B4, G4', { stem: 'up' }))].reduce(concat)),\n            ],\n        })\n        .addClef('treble')\n        .addKeySignature('G');\n\n    system\n        .addStave({ voices: [voice(notes('D4/q, B3[id=\"m7c\"], G3', { clef: 'bass' }))] })\n        .addClef('bass')\n        .addKeySignature('G');\n    system.addConnector('brace');\n    system.addConnector('singleRight');\n    system.addConnector('singleLeft');\n    systems.push(system);\n\n    // id('m7a').addModifier(vf.Fingering({ number: '2', position: 'below' }), 0);\n    // id('m7b').addModifier(vf.Fingering({ number: '1' }), 0);\n    // id('m7c').addModifier(vf.Fingering({ number: '3', position: 'above' }), 0);\n\n    /*  Measure 8 */\n    system = makeSystem(180);\n    var grace = vf.GraceNote({ keys: ['d/3'], clef: 'bass', duration: '8', slash: true });\n\n    system.addStave({ voices: [voice(notes('A4/h.[id=\"m8c\"]'))] });\n    system.addStave({\n        voices: [\n            score\n                .set({ clef: 'bass' })\n                .voice(\n                    [notes('D4/q[id=\"m8a\"]'), beam(notes('D3/8, C4, B3[id=\"m8b\"], A3', { stem: 'down' }))].reduce(concat)\n                ),\n        ],\n    });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n\n    // id('m8b').addModifier(vf.Fingering({ number: '1', position: 'above' }), 0);\n    // id('m8c').addModifier(vf.GraceNoteGroup({ notes: [grace] }), 0);\n\n    // vf.Curve({\n    //   from: id('m7a'),\n    //   to: id('m8c'),\n    //   options: {\n    //     cps: [\n    //       { x: 0, y: 20 },\n    //       { x: 0, y: 20 },\n    //     ],\n    //     invert: true,\n    //     position: 'nearTop',\n    //     position_end: 'nearTop',\n    //   },\n    // });\n\n    // vf.StaveTie({ from: grace, to: id('m8c') });\n\n    /*  Measure 9 */\n    system = makeSystem(180);\n    system.addStave({\n        voices: [\n            score\n                .set({ clef: 'treble' })\n                .voice([notes('D5/q[id=\"m9a\"]'), beam(notes('G4/8, A4, B4, C5', { stem: 'up' }))].reduce(concat)),\n        ],\n    });\n\n    system.addStave({ voices: [voice(notes('B3/h, A3/q', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // id('m9a').addModifier(vf.Fingering({ number: '5' }), 0);\n\n    /*  Measure 10 */\n    system = makeSystem(170);\n    system.addStave({ voices: [voice(notes('D5/q[id=\"m10a\"], G4[id=\"m10b\"], G4[id=\"m10c\"]'))] });\n    system.addStave({ voices: [voice(notes('G3/q[id=\"m10d\"], B3, G3', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // id('m10a').addModifier(vf.Articulation({ type: 'a.', position: 'above' }), 0);\n    // id('m10b').addModifier(vf.Articulation({ type: 'a.', position: 'below' }), 0);\n    // id('m10c').addModifier(vf.Articulation({ type: 'a.', position: 'below' }), 0);\n    // id('m10d').addModifier(vf.Fingering({ number: '4' }), 0);\n\n    // vf.Curve({\n    //   from: id('m9a'),\n    //   to: id('m10a'),\n    //   options: {\n    //     cps: [\n    //       { x: 0, y: 40 },\n    //       { x: 0, y: 40 },\n    //     ],\n    //   },\n    // });\n\n    /*  Measure 11 */\n    system = makeSystem(150);\n    system.addStave({\n        voices: [voice([notes('E5/q[id=\"m11a\"]'), beam(notes('C5/8, D5, E5, F5', { stem: 'down' }))].reduce(concat))],\n    });\n    // id('m11a').addModifier(vf.Fingering({ number: '3', position: 'above' }), 0);\n\n    system.addStave({ voices: [voice(notes('C4/h.', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    /*  Measure 12 */\n    system = makeSystem(170);\n    system.addStave({ voices: [voice(notes('G5/q[id=\"m12a\"], G4[id=\"m12b\"], G4[id=\"m12c\"]'))] });\n\n    system.addStave({\n        voices: [\n            score\n                .set({ clef: 'bass' })\n                .voice(\n                    [notes('B3/q[id=\"m12d\"]'), beam(notes('C4/8, B3, A3, G3[id=\"m12e\"]', { stem: 'down' }))].reduce(concat)\n                ),\n        ],\n    });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // id('m12a').addModifier(vf.Articulation({ type: 'a.', position: 'above' }), 0);\n    // id('m12b').addModifier(vf.Articulation({ type: 'a.', position: 'below' }), 0);\n    // id('m12c').addModifier(vf.Articulation({ type: 'a.', position: 'below' }), 0);\n\n    // id('m12d').addModifier(vf.Fingering({ number: '2', position: 'above' }), 0);\n    // id('m12e').addModifier(vf.Fingering({ number: '4', position: 'above' }), 0);\n\n    // vf.Curve({\n    //   from: id('m11a'),\n    //   to: id('m12a'),\n    //   options: {\n    //     cps: [\n    //       { x: 0, y: 20 },\n    //       { x: 0, y: 20 },\n    //     ],\n    //   },\n    // });\n\n    /*  Measure 13 (New system) */\n    x = 20;\n    y += 230;\n\n    system = makeSystem(220);\n    system\n        .addStave({\n            voices: [\n                score\n                    .set({ clef: 'treble' })\n                    .voice([notes('c5/q[id=\"m13a\"]'), beam(notes('d5/8, c5, b4, a4', { stem: 'down' }))].reduce(concat)),\n            ],\n        })\n        .addClef('treble')\n        .addKeySignature('G');\n\n    system\n        .addStave({ voices: [voice(notes('a3/h[id=\"m13b\"], f3/q[id=\"m13c\"]', { clef: 'bass' }))] })\n        .addClef('bass')\n        .addKeySignature('G');\n\n    system.addConnector('brace');\n    system.addConnector('singleRight');\n    system.addConnector('singleLeft');\n    systems.push(system);\n\n    // id('m13a').addModifier(vf.Fingering({ number: '4', position: 'above' }), 0);\n    // id('m13b').addModifier(vf.Fingering({ number: '1' }), 0);\n    // id('m13c').addModifier(vf.Fingering({ number: '3', position: 'above' }), 0);\n\n    /*  Measure 14 */\n    system = makeSystem(180);\n    system.addStave({\n        voices: [\n            score\n                .set({ clef: 'treble' })\n                .voice([notes('B4/q'), beam(notes('C5/8, b4, a4, g4', { stem: 'up' }))].reduce(concat)),\n        ],\n    });\n\n    system.addStave({ voices: [voice(notes('g3/h[id=\"m14a\"], b3/q[id=\"m14b\"]', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // id('m14a').addModifier(vf.Fingering({ number: '2' }), 0);\n    // id('m14b').addModifier(vf.Fingering({ number: '1' }), 0);\n\n    /*  Measure 15 */\n    system = makeSystem(180);\n    system.addStave({\n        voices: [\n            score\n                .set({ clef: 'treble' })\n                .voice([notes('a4/q'), beam(notes('b4/8, a4, g4, f4[id=\"m15a\"]', { stem: 'up' }))].reduce(concat)),\n        ],\n    });\n\n    system.addStave({ voices: [voice(notes('c4/q[id=\"m15b\"], d4, d3', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // id('m15a').addModifier(vf.Fingering({ number: '2' }), 0);\n    // id('m15b').addModifier(vf.Fingering({ number: '2' }), 0);\n\n    /*  Measure 16 */\n    system = makeSystem(130);\n    system\n        .addStave({\n            voices: [score.set({ clef: 'treble' }).voice([notes('g4/h.[id=\"m16a\"]')].reduce(concat))],\n        })\n        .setEndBarType(vexflow.Flow.Barline.type.REPEAT_END);\n\n    system\n        .addStave({ voices: [voice(notes('g3/h[id=\"m16b\"], g2/q', { clef: 'bass' }))] })\n        .setEndBarType(vexflow.Flow.Barline.type.REPEAT_END);\n    system.addConnector('boldDoubleRight');\n    systems.push(system);\n\n    // id('m16a').addModifier(vf.Fingering({ number: '1' }), 0);\n    // id('m16b').addModifier(vf.Fingering({ number: '1' }), 0);\n\n    // vf.Curve({\n    //   from: id('m13a'),\n    //   to: id('m16a'),\n    //   options: {\n    //     cps: [\n    //       { x: 0, y: 50 },\n    //       { x: 0, y: 20 },\n    //     ],\n    //     invert: true,\n    //     position_end: 'nearTop',\n    //   },\n    // });\n\n    /* Measure 17 */\n    system = makeSystem(180);\n    system\n        .addStave({\n            voices: [\n                score\n                    .set({ clef: 'treble' })\n                    .voice([notes('b5/q[id=\"m17a\"]'), beam(notes('g5/8, a5, b5, g5', { stem: 'down' }))].reduce(concat)),\n                voice([vf.TextDynamics({ text: 'mf', duration: 'h', dots: 1, line: 10 })]),\n            ],\n        })\n        .setBegBarType(vexflow.Flow.Barline.type.REPEAT_BEGIN);\n\n    system\n        .addStave({ voices: [voice(notes('g3/h.', { clef: 'bass' }))] })\n        .setBegBarType(vexflow.Flow.Barline.type.REPEAT_BEGIN);\n\n    system.addConnector('boldDoubleLeft');\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // id('m17a').addModifier(vf.Fingering({ number: '5', position: 'above' }), 0);\n\n    /* Measure 18 */\n    system = makeSystem(180);\n    system.addStave({\n        voices: [\n            score\n                .set({ clef: 'treble' })\n                .voice(\n                    [notes('a5/q[id=\"m18a\"]'), beam(notes('d5/8, e5, f5, d5[id=\"m18b\"]', { stem: 'down' }))].reduce(concat)\n                ),\n        ],\n    });\n\n    system.addStave({ voices: [voice(notes('f3/h.', { clef: 'bass' }))] });\n    system.addConnector('singleRight');\n    systems.push(system);\n\n    // id('m18a').addModifier(vf.Fingering({ number: '4', position: 'above' }), 0);\n\n    // vf.Curve({\n    //   from: id('m17a'),\n    //   to: id('m18b'),\n    //   options: {\n    //     cps: [\n    //       { x: 0, y: 20 },\n    //       { x: 0, y: 30 },\n    //     ],\n    //   },\n    // });\n\n    /* Done */\n    //(vexflow.Flow as any).Registry.disableDefaultRegistry();\n    vf.draw();\n    return systems;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport EventsDemo from './EventsDemo';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <EventsDemo/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}